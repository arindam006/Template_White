// Generated by CoffeeScript 1.3.3
var AccountPage;

AccountPage = {
  start_fb_auth: function(user_id) {
    var verify_modal;
    assert(FacebookOAuth.authed_user_id !== user_id, "Shouldn't be FB authed here!");
    if (viewer.is_uid_associated(FacebookOAuth.authed_user_id)) {
      verify_modal = new FacebookConfirmModal(viewer.get_user_by_id(user_id), null, FacebookOAuth.do_auth.curry(null, user_id));
      return verify_modal.show();
    } else {
      return FacebookOAuth.do_auth(null, user_id);
    }
  },
  get_content_tab_selector: function(role) {
    if (!viewer.is_paired || !role || location.href.endsWith('settings')) {
      return "";
    }
    return "#" + role + "-content";
  },
  facebook_revoke_auth: function(user_id) {
    assert(user_id != null, "user_id must be specified");
    Notify.server_success(_('Disconnecting your account from Facebook...'), 2);
    return new Ajax.DBRequest('/fb/purge', {
      onSuccess: function() {
        var tab;
        tab = AccountPage.get_content_tab_selector(viewer.get_user_by_id(user_id).role);
        $j("" + tab + " .deauth_facebook").hide();
        $j("" + tab + " .auth_facebook").show();
        return FacebookOAuth.authed_user_id = null;
      },
      subject_user: user_id
    });
  },
  twitter_revoke_auth: function(user_id) {
    assert(user_id != null, "user_id must be specified");
    return new Ajax.DBRequest('/twitter/disable', {
      onSuccess: function() {
        var tab;
        Notify.server_success(_('Unlinked Twitter account.'));
        tab = AccountPage.get_content_tab_selector(viewer.get_user_by_id(user_id).role);
        return $j("" + tab + " #auth_twitter").closest('tr').removeClass('has-authed');
      },
      subject_user: user_id
    });
  },
  self_unban: function() {
    return $j('#self-unban-form').submit();
  },
  twitter_auth_complete: function(user_id) {
    var tab;
    assert(user_id != null, "user_id must be specified");
    Notify.server_success(_('Linked Twitter account.'));
    tab = AccountPage.get_content_tab_selector(viewer.get_user_by_id(user_id).role);
    return $j("" + tab + " #auth_twitter").closest('tr').addClass('has-authed');
  },
  show_account_login_modal: function() {
    return Multiaccount.show_page_login_modal(window.location.href);
  },
  prepare_account_photo: function() {
    return $j("#db-chooser").bind("DbxChooserSuccess", function(e) {
      return $j("#account_photo").css("background-image", "url(" + e.originalEvent.files[0].link + ")");
    });
  },
  account_photo_element: function() {
    return $j("#account_photo");
  },
  prepare_send_account_photo: function() {
    var error,
      _this = this;
    error = function() {
      return Notify.server_error(_("There was a problem changing your account photo"), 2);
    };
    $j(".account-photo-chooser-box")[0].appendChild(Dropbox.createChooseButton({
      success: function(files) {
        return $j.ajax("/account/set_account_photo", {
          method: "POST",
          data: {
            selected_file: files[0].link
          },
          success: function(data) {
            _this.account_photo_element().css("background-image", _this.account_photo_element().css("background-image"));
            $j("#delete_account_photo_x").css("display", "inline");
            _this.account_photo_element().show();
            return Notify.server_success(_("Account photo changed successfully"), 2);
          },
          error: error,
          timeout: error
        });
      },
      cancel: function() {},
      linkType: "direct",
      multiselect: false,
      extensions: ['images']
    }));
    return this.prepare_delete_account_photo();
  },
  prepare_delete_account_photo: function() {
    var error,
      _this = this;
    error = function() {
      return Notify.server_error(_("There was a problem deleting your account photo"), 2);
    };
    return $j("#delete_account_photo_x").click(function(e) {
      e.preventDefault();
      return SimpleModal.show({
        title_html: _("Remove account photo"),
        body_html: _("Are you sure you want to remove your account photo?"),
        confirm_text: _("Remove"),
        confirm_callback: function() {
          return $j.ajax("/account/delete_account_photo", {
            method: "POST",
            success: function() {
              $j("#delete_account_photo_x").hide();
              _this.account_photo_element().hide();
              return Notify.server_success(_("Account photo deleted"), 2);
            },
            error: error,
            timeout: error
          });
        }
      });
    });
  }
};
